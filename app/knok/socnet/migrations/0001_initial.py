# Generated by Django 4.0 on 2021-12-23 08:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='KNUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, db_index=True, max_length=255)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, unique=True)),
                ('phone', models.CharField(db_index=True, max_length=14, unique=True, verbose_name='Номер телефона')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('birthday', models.DateTimeField(blank=True, null=True, verbose_name='День рождения')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Краткое описание')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], default='male', max_length=6, verbose_name='Пол')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user/avatar', verbose_name='Аватар')),
                ('purpose', models.CharField(max_length=50, null=True, verbose_name='Цель знакомства')),
                ('city', models.CharField(max_length=50, null=True, verbose_name='Город')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь KnoKnoK',
                'verbose_name_plural': 'Пользователи KnoKnoK',
            },
        ),
        migrations.CreateModel(
            name='Dialog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_group', models.BooleanField(default=False, help_text='Является ли чат групповым', verbose_name='active')),
                ('interlocutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interlocutor', to='socnet.knuser', verbose_name='Собеседник')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Диалог',
                'verbose_name_plural': 'Диалоги',
            },
        ),
        migrations.CreateModel(
            name='InfoTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Заголовок характеристики')),
                ('unit', models.CharField(blank=True, max_length=10, verbose_name='Единица измерения')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Заголовок характеристики',
                'verbose_name_plural': 'Заголовки характеристик',
            },
        ),
        migrations.CreateModel(
            name='PriceObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='prices', verbose_name='Подарок')),
                ('cost', models.IntegerField(blank=True, default=0, verbose_name='Цена')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Подарок, объект',
                'verbose_name_plural': 'Подарки, объекты',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(default=20, verbose_name='Пополнение внутреннего кошельа или вывод')),
            ],
            options={
                'verbose_name': 'Хранилище',
            },
        ),
        migrations.CreateModel(
            name='ThemeSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название темы')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Тема предложения',
                'verbose_name_plural': 'Темы предложений',
            },
        ),
        migrations.CreateModel(
            name='WalletKnok',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(default=20, verbose_name='Размер кошелька')),
                ('isActive', models.BooleanField(default=False, verbose_name='Активный/Не активный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Кошелек',
                'verbose_name_plural': 'Кошельки',
            },
        ),
        migrations.CreateModel(
            name='TransferKnok',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.IntegerField(verbose_name='Размер кошелька')),
                ('isIn', models.BooleanField(default=False, verbose_name='Пополнение/Вывод')),
                ('type', models.IntegerField(verbose_name='Тип операции')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.walletknok', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='TransferBetweenPeople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.IntegerField(verbose_name='Размер кошелька')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.walletknok', verbose_name='Кто отправил KN')),
                ('wallet_who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='who', to='socnet.walletknok', verbose_name='Кому отправлены KN')),
            ],
            options={
                'verbose_name': 'Транзакция от человека человеку',
                'verbose_name_plural': 'Транзакции между людьми',
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('duration', models.DateField(verbose_name='Дата окончания события')),
                ('fire_suggestion', models.BooleanField(blank=True, default=False, verbose_name='Горящее/Не горящее')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='socnet.themesuggestion', verbose_name='Тема')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предложение',
                'verbose_name_plural': 'Предложения',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isActive', models.BooleanField(default=True, verbose_name='Активен/Не активен')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('price_obj', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='socnet.priceobject', verbose_name='Объект подарка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
                ('who', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to='socnet.knuser', verbose_name='Получатель')),
            ],
            options={
                'verbose_name': 'Подарок',
                'verbose_name_plural': 'Подарки',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(blank=True, default=False, verbose_name='Платное/Бесплатное')),
                ('cost', models.IntegerField(blank=True, default=0, verbose_name='Цена')),
                ('path_photo', models.ImageField(upload_to='photos/%pk/%Y/%m/%d', verbose_name='Путь к фото')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Фотограия',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='MessageText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True, verbose_name='Текст сообщения')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('roomId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.dialog', verbose_name='Идентификатор комнаты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='InfoValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=30, unique=True, verbose_name='Значение')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.infotitle', verbose_name='Характеристика')),
            ],
            options={
                'verbose_name': 'Значение характеристики',
                'verbose_name_plural': 'Значения характеристик',
            },
        ),
        migrations.CreateModel(
            name='InfoUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.CharField(max_length=3, verbose_name='Рост')),
                ('weight', models.CharField(max_length=3, verbose_name='Вес')),
                ('body_type', models.CharField(max_length=30, verbose_name='Телосложение')),
                ('marks', models.CharField(max_length=30, verbose_name='На теле')),
                ('smoke', models.CharField(max_length=30, verbose_name='Курение')),
                ('marital_status', models.CharField(max_length=30, verbose_name='Семейное положение')),
                ('child', models.CharField(max_length=30, verbose_name='Дети')),
                ('accommodation', models.CharField(max_length=30, verbose_name='Проживание')),
                ('work', models.CharField(max_length=30, verbose_name='Сфера работы')),
                ('alcohol', models.CharField(max_length=30, verbose_name='Алкоголь')),
                ('meeting_place', models.CharField(max_length=30, verbose_name='Место для встреч')),
                ('sponsorship', models.CharField(max_length=30, verbose_name='Спонсорство')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Характеристика пользователя',
                'verbose_name_plural': 'Характеристики пользователей',
            },
        ),
        migrations.CreateModel(
            name='HistoryTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(default=20, verbose_name='Пополнение внутреннего кошельа или вывод')),
                ('isIn', models.BooleanField(default=False, verbose_name='Пополнение/Вывод')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Внутренний перевод в хранилище',
                'verbose_name_plural': 'Внутренние переводы в хранилище',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isConfirmed', models.BooleanField(blank=True, default=False, verbose_name='Подтверждено/Не подтверждено')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('favorite_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_user', to='socnet.knuser', verbose_name='Избранный')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранный',
                'verbose_name_plural': 'Избранные',
            },
        ),
        migrations.CreateModel(
            name='Adversting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baner', models.ImageField(upload_to='adversting/image', verbose_name='Банер')),
                ('resolution', models.BooleanField(default=True, verbose_name='Большое/Не большое')),
                ('link', models.CharField(max_length=100, verbose_name='Ссылка')),
                ('country', models.CharField(max_length=30, verbose_name='Страна')),
                ('region', models.CharField(max_length=30, verbose_name='Регион')),
                ('city', models.CharField(max_length=30, verbose_name='Город')),
                ('count_day', models.IntegerField(verbose_name='Количество дней показа')),
                ('count_in_day', models.IntegerField(verbose_name='Количество показов в день')),
                ('time_show', models.IntegerField(verbose_name='Время одного показа')),
                ('period_start', models.TimeField(verbose_name='Начала периода показа')),
                ('time_period', models.TimeField(verbose_name='Длительность периода')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socnet.knuser', verbose_name='Чья реклама')),
            ],
            options={
                'verbose_name': 'Рекламный пост',
                'verbose_name_plural': 'Рекламные посты',
            },
        ),
    ]
